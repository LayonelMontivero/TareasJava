import java.util.ArrayList;
import java.util.Scanner;

public class Facturacion {

    // Clase interna DetalleFactura
    static class DetalleFactura {
        private String codigoArticulo;
        private String nombreArticulo;
        private int cantidad;
        private double precioUnitario;
        private double descuentoItem;
        private double subtotal;

        // Constructor
        public DetalleFactura(String codigoArticulo, String nombreArticulo, int cantidad, double precioUnitario, double descuentoItem, double subtotal) {
            this.codigoArticulo = codigoArticulo;
            this.nombreArticulo = nombreArticulo;
            this.cantidad = cantidad;
            this.precioUnitario = precioUnitario;
            this.descuentoItem = descuentoItem;
            this.subtotal = subtotal;
        }

        @Override
        public String toString() {
            return codigoArticulo + " " + nombreArticulo + " " + cantidad + " " + precioUnitario + " " + descuentoItem + " " + subtotal;
        }
    }

    // Clase interna Factura
    static class Factura {
        private String fechaFactura;
        private long numeroFactura;
        private double totalCalculadoFactura;
        private String cliente;
        private ArrayList<DetalleFactura> detallesFactura;

        public Factura() {
            this.detallesFactura = new ArrayList<>();
        }

        // Métodos
        public void agregarDetalleFactura(DetalleFactura detalleFactura) {
            detallesFactura.add(detalleFactura);
        }

        public void calcularMontoTotal() {
            totalCalculadoFactura = detallesFactura.stream().mapToDouble(d -> d.subtotal).sum();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append("Fecha: ").append(fechaFactura).append("\n");
            sb.append("Número: ").append(numeroFactura).append("\n");
            sb.append("Cliente: ").append(cliente).append("\n");
            sb.append("Detalles:\n");
            sb.append("Código Artículo Nombre Artículo Cantidad Precio Unitario Descuento Subtotal\n");
            for (DetalleFactura detalle : detallesFactura) {
                sb.append(detalle).append("\n");
            }
            sb.append("Total: ").append(totalCalculadoFactura).append("\n");
            return sb.toString();
        }
    }

    // Array global de artículos
    private static final String[][] articulos = {
            {"101", "Leche", "25"},
            {"102", "Gaseosa", "30"},
            {"103", "Fideos", "15"},
            {"104", "Arroz", "28"},
            {"105", "Vino", "120"},
            {"106", "Manteca", "20"},
            {"107", "Lavandina", "18"},
            {"108", "Detergente", "46"},
            {"109", "Jabón en Polvo", "96"},
            {"110", "Galletas", "60"}
    };

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Factura factura = new Factura();

        // Datos de la factura
        System.out.println("Ingrese la fecha de la factura:");
        factura.fechaFactura = scanner.nextLine();

        while (true) {
            System.out.println("Ingrese el número de factura:");
            try {
                factura.numeroFactura = Long.parseLong(scanner.nextLine());
                if (factura.numeroFactura > 0) {
                    break;
                } else {
                    System.out.println("El número de factura debe ser mayor a 0.");
                }
            } catch (NumberFormatException e) {
                System.out.println("Número inválido, intente nuevamente.");
            }
        }

        System.out.println("Ingrese el nombre del cliente:");
        while ((factura.cliente = scanner.nextLine()).isEmpty()) {
            System.out.println("El nombre del cliente no puede estar vacío, intente nuevamente.");
        }

        // Cargar detalles de la factura
        while (true) {
            System.out.println("Ingrese el código del artículo:");
            String codigo = scanner.nextLine();
            String[] articulo = buscarArticulo(codigo);

            if (articulo == null) {
                System.out.println("El código ingresado no existe, intente nuevamente.");
                continue;
            }

            System.out.println("Ingrese la cantidad del artículo:");
            int cantidad = Integer.parseInt(scanner.nextLine());

            double precioUnitario = Double.parseDouble(articulo[2]);
            double descuento = (cantidad > 5) ? precioUnitario * 0.1 : 0.0;
            double subtotal = cantidad * (precioUnitario - descuento);

            // Crear y agregar el detalle de la factura
            DetalleFactura detalle = new DetalleFactura(
                    articulo[0], articulo[1], cantidad, precioUnitario, descuento, subtotal
            );
            factura.agregarDetalleFactura(detalle);

            System.out.println("¿Desea agregar otro artículo? (s/n):");
            String continuar = scanner.nextLine();
            if (!continuar.equalsIgnoreCase("s")) {
                break;
            }
        }

        // Calcular y mostrar el total
        factura.calcularMontoTotal();
        System.out.println("\n--- FACTURA ---");
        System.out.println(factura);
    }

    // Buscar artículo por código
    private static String[] buscarArticulo(String codigo) {
        for (String[] articulo : articulos) {
            if (articulo[0].equals(codigo)) {
                return articulo;
            }
        }
        return null;
    }
}
